Objectives

1. Design a Layout: Use HTML to structure your content logically and CSS Grid or Flexbox for layout.
2. Responsive Design: Your website should work on a variety of devices and window sizes.
3. Styling: Use CSS to style your website, demonstrating an understanding of CSS selectors, properties, and values.
4. Content: Include sections for About, Skills, Projects, and Contact.
5. Navigation: Implement a navigation bar to easily navigate to different sections of the website.
6. Semantic HTML: Use semantic HTML5 tags to structure your website content.


Requirements

1. Navigation: A navigation bar to navigate between pages 
2. Homepage: Create a welcoming homepage with a professional photo of yourself, your name, and a one-line bio or tagline.
    - sivun keskell√§ kuva, alla nimi ja se vitun tagline. vasemmalle sivu valikko
3. About Section: Write a brief introduction about yourself, your background, and your interests in software development.

4. Skills Section: List your technical skills, such as programming languages, tools, and frameworks.
5. Projects Section: Showcase at least three of your best projects with images, descriptions, and links to live sites or source code. (No projects, just create some place holders)
6. Contact Section: Links to your professional public profiles (LinkedIn, GitHub) and a downloadable version your resume.

7. Styling: Utilize custom CSS to create a unique and cohesive design language throughout your portfolio. Employ a color scheme, fonts, and layout that represent your personal brand.
8. Responsive Design: Use media queries to ensure that your website is accessible and functional on mobile, tablet, and desktop devices.


SEMANTIC ELEMENTIT:
<article>
<aside>
<details>
<figcaption>
<figure>
<footer>
<header>
<main>
<mark>
<nav>
<section>
<summary>
<time>